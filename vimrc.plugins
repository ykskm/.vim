" neocomplcache
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#enable_auto_select = 1
let g:neocomplete#max_list = 10
let g:neocomplete#sources#dictionary#dictionaries = {
            \ 'default': '',
            \ 'javascript': $HOME . '/.vim/dict/javascript.dict',
            \ }

inoremap <expr><C-j> neocomplete#complete_common_string()
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><C-y> neocomplete#close_popup()
inoremap <expr><C-e> neocomplete#cancel_popup()

" neosnippet
let g:neosnippet#disable_runtime_snippets = { '_': 1 }
let g:neosnippet#snippets_directory = $HOME . '/.vim/snippets'

imap <silent><C-l> <Plug>(neosnippet_expand_or_jump)
smap <silent><C-l> <Plug>(neosnippet_expand_or_jump)
command! -nargs=? Nes NeoSnippetEdit <args>

" unite.vim
let g:unite_enable_start_insert = 1

nnoremap <leader>b :<C-u>Unite buffer<CR>
nnoremap <leader>f :<C-u>Unite file<CR>
nnoremap <leader>c :<C-u>UniteWithBufferDir file<CR>
nnoremap <leader>m :<C-u>Unite file_mru<CR>
nnoremap <leader>M :<C-u>Unite mark<CR>
nnoremap <leader>o :<C-u>Unite outline<CR>

" vim-unite-ack
let g:unite_source_ack_command = "ack --nocolor --nogroup"

function! s:escape_visual(...) "{{{
    let escape = a:0 ? a:1 : ''
    normal `<
    let s = col('.') - 1
    normal `>
    let e = col('.') - 1
    let line = getline('.')
    let pat = line[s : e]
    return escape(pat, escape)
endfunction"}}}
function! s:visual_unite_input() "{{{
    return s:escape_visual(" ")
endfunction"}}}
function! s:visual_unite_arg() "{{{
    return s:escape_visual(' :\')
endfunction"}}}

nnoremap <leader>s :<C-u>Unite ack::
nnoremap <leader>S :<C-u>exe "Unite -buffer-name=ack ack::" . escape(expand('<cword>'),' :\')<CR>
vnoremap <leader>s :<C-u>exe "Unite -buffer-name=ack ack::" . <SID>visual_unite_arg()<CR>

" toggle_word
nnoremap ,a :ToggleWord<CR>
let g:toggle_words_dict = {'*': [['width', 'height'], ['月', '火', '水', '木', '金', '土', '日']]}

" simple-javascript-indenter
let g:SimpleJsIndenter_BriefMode = 1

" ack.vim
let g:ackprg = "ack-grep -H --nocolor --nogroup --column"

" EasyMotion
nnoremap <leader>j :<C-u>call EasyMotion#JK(0, 0)<CR>
nnoremap <leader>k :<C-u>call EasyMotion#JK(0, 1)<CR>

" fugitive.vim
set statusline=%n:\ %<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).':'.&ff.']'}%y%{fugitive#statusline()}\ %=%l,%c%V%8P

" Tabularize
vnoremap <silent><leader>= :Tabularize /=<CR>
vnoremap t :Tabularize /
